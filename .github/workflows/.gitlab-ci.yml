stages:
  - build
  - deploy

build_apk:
  stage: build
  image: openjdk:11 # Docker image with OpenJDK 11
  before_script:
    - apt-get update && apt-get install -y wget unzip curl
    - wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - unzip commandlinetools-linux-7583922_latest.zip -d /opt/android-sdk
    - export ANDROID_HOME=/opt/android-sdk
    - export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools
    - yes | sdkmanager --licenses
    - sdkmanager "platform-tools" "build-tools;30.0.3" "android-30" # Install SDK and build tools
    - curl -s "https://get.sdkman.io" | bash # Install SDKMAN to manage different JDK versions
    - source "$HOME/.sdkman/bin/sdkman-init.sh" # Initialize SDKMAN
    - sdk install java 11.0.25-open # Ensure Java 11 is installed and set as default
  script:
    - ./gradlew assembleRelease # Build the APK using Gradle
  artifacts:
    paths:
      - app/build/outputs/apk/release/app-release.apk # Path to the generated APK

deploy:
  stage: deploy
  script:
    - echo "Deploying APK..." # Add your deployment script here (optional)
  only:
    - main # Only run on the main branch
